# CMake version
cmake_minimum_required(VERSION 3.8.2 FATAL_ERROR)

# Include cmake modules
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake")

# Declare project
project(Runeterra)

# Set Runeterra's root directory
if (NOT RUNETERRA_ROOT)
	set(RUNETERRA_ROOT ${PROJECT_SOURCE_DIR})
endif()

# Set output directories
set(DEFAULT_CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/lib)

# Set enable output of compile commands during generation
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Includes
include_directories(Includes)
include_directories(Libraries)
include_directories(Libraries/cppcodec)
include_directories(Libraries/doctest/doctest)
include_directories(Libraries/entt/single_include)

# Compile options
include(CMake/CompileOptions.cmake)

# Build type - Release by default
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Overrides
set(CMAKE_MACOSX_RPATH ON)

# Set resources
set(RESOURCES_DIR ${RUNETERRA_ROOT}/Resources)
set(RESOURCES_JSONS
    ${RESOURCES_DIR}/globals-en_us.json
    ${RESOURCES_DIR}/set1-en_us.json
    ${RESOURCES_DIR}/set2-en_us.json
    ${RESOURCES_DIR}/set3-en_us.json)

# Project modules
add_subdirectory(Extensions/RuneConsole)
add_subdirectory(Libraries/doctest)
add_subdirectory(Sources/Runeterra)
add_subdirectory(Tests/UnitTests)

# Code coverage - Debug only
# NOTE: Code coverage results with an optimized (non-Debug) build may be misleading
option(BUILD_COVERAGE "Build code coverage" OFF)
if (CMAKE_BUILD_TYPE MATCHES Debug AND CMAKE_COMPILER_IS_GNUCXX AND BUILD_COVERAGE)
    include(CodeCoverage)
    setup_target_for_coverage(${PROJECT_NAME}_coverage UnitTests coverage)
endif()